{%extends "base.jinja2"%}

{%block title%}Federation Info{%endblock%}

{%block body%}
  {%include "header.jinja2"%}

  <div class="container">
    <div class="page-header">
      <h1>Federation Information</h1>
    </div>
    
    <h2 class="anchored" data-anchor-id="endpoint-info-title">Endpoint Information</h2>
    <section id="endpoint-information" class="level4">
      <div class="cell" data-execution_count="30">
        <div class="cell-output cell-output-display" data-execution_count="825">
          <div class="container first-container col-sm-12 pull-left">
            <table class="table table-condensed table-striped">
              <thead>
                <tr>
                  <th>Client</th>
                  <th>Organization</th>
                  <th>Email</th>
                  <th>Endpoint Status</th>
                </tr>
              </thead>
              <tbody>
                {%for i in range(client_names|length)%}
                <tr>
                  <td>{{client_names[i]}}</td>
                  <td>{{client_orgs[i]}}</td>
                  <td>
                    <div class="endpoint-info-content">
                      <a href="mailto:{{client_emails[i]}}"><img src="{{url_for('static', filename='img/email.png')}}" role="button" style="cursor: pointer;"/>{{client_emails[i]}}</a>
                    </div>
                  </td>
                  <td>
                    <div class="endpoint-info-content">
                    {% if client_endpoints[i] == '0'%}
                      <img id="info_status_{{client_names[i]}}_{{client_endpoints[i]}}" src="{{url_for('static', filename='img/unset-hex.png')}}" tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="Endpoint Status" data-content="The client endpoint is either unset or invalid!" data-placement="left"/>
                    {% else %}
                      <img id="info_status_{{client_names[i]}}_{{client_endpoints[i]}}" src="{{url_for('static', filename='img/loading.gif')}}" tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="Endpoint Status" data-content="Checking the status of the client endpoint......" data-placement="left"/>
                    {% endif %}
                    </div>
                  </td>
                </tr>
                {%endfor%}
              </tbody>
            </table>
          </div>
        </div> 
      </div>
    </section>

    <h2 class="anchored" data-anchor-id="exp-info-title">Experiment Information</h2>
    <section id="experiment-information" class="level4">
      <div class="button-container float-end">
        <button disabled id="experiment-delete" data-toggle="modal" data-target="#deleteModal" onclick="clickDelete()">Delete</button>
        <button disabled id="experiment-compare" onclick="clickCompare()">Compare</button>
      </div>
      <div class="cell" data-execution_count="30">
        <div class="cell-output cell-output-display" data-execution_count="825">
          <div class="container first-container col-sm-12 pull-left">
            <table class="table table-condensed table-striped">
              <thead>
                <tr>
                  <th>Experiment Name</th>
                  <th>Experiment ID</th>
                  <th>Status</th>
                  <th>Config</th>
                  <th>Log</th>
                  <th>Report</th>
                  <th>Tensorboard</th>
                </tr>
              </thead>
              <tbody>
                {%for i in range(task_ids|length)%}
                <tr>
                  <td>
                    <input type="checkbox" name="item_checkbox" value="{{ task_ids[i] }}" task-name="{{task_names[i]}}">&nbsp;{{task_names[i]}}
                  </td>
                  <td>{{task_ids[i]}}</td>
                  <td id="task_{{task_ids[i]}}_status"></td>
                  <td id="task_{{task_ids[i]}}_configfile">
                    <a href="{{url_for('download_file', file_type='configuration', group_id=server_group_id, task_id=task_ids[i])}}">
                      <img src="{{url_for('static', filename='img/config.png')}}" style="width:25px; cursor:pointer;" id="???"/>
                    </a>
                  </td>
                  <td id="task_{{task_id}}_logfile">
                    <a href="{{url_for('download_file', file_type='log', group_id=server_group_id, task_id=task_ids[i])}}">
                      <img src="{{url_for('static', filename='img/log.png')}}" style="width:25px; cursor:pointer;" id="???"/>
                    </a>
                  </td>
                  <td id="task_{{task_id}}_reportfile">
                    <a href="{{url_for('download_file', file_type='report', group_id=server_group_id, task_id=task_ids[i])}}">
                      <img src="{{url_for('static', filename='img/report.png')}}" style="width:25px; cursor:pointer;" id="???"/>
                    </a>
                  </td>
                  <td id="task_{{task_id}}_tbfile">
                    <a href="{{url_for('tensorboard_log_page', server_group_id=server_group_id, task_id=task_ids[i])}}">
                      <img src="{{url_for('static', filename='img/tb.png')}}" style="width:25px; cursor:pointer;" id="???"/>
                    </a>
                  </td>
                </tr>
                {%endfor%}
              </tbody>
            </table>
          </div>
        </div> 
      </div>
    </section>

    <hr class="col-sm-12" style="border-top: 1px solid rgba(128, 128, 128, 0.801) ;" width="100%">

    <div class="form-group col-md-12">
      <button class="btn btn-secondary" onclick="disableBackButton()" id="server-info-page-back-btn">Back</button>
    </div>


    {# <div class="row">
      <div class="col-md-12">
        <div class="endpoint-info-container">
          <div class="endpoint-info-item endpoint-info-header">Client</div>
          <div class="endpoint-info-item endpoint-info-header">Organization</div>
          <div class="endpoint-info-item endpoint-info-header">Email</div>
          <div class="endpoint-info-item endpoint-info-header">Endpoint Status</div>
          {%for i in range(client_names|length)%}
            <div class="endpoint-info-item endpoint-info-content">{{client_names[i]}}</div>
            <div class="endpoint-info-item endpoint-info-content">{{client_orgs[i]}}</div>
            <div class="endpoint-info-item endpoint-info-content">
              <a href="mailto:{{client_emails[i]}}"><img src="{{url_for('static', filename='img/email.png')}}" role="button" style="cursor: pointer;"/>{{client_emails[i]}}</a>
            </div>
            <div class="endpoint-info-item endpoint-info-content">
              {% if client_endpoints[i] == '0'%}
                <img id="info_status_{{client_names[i]}}_{{client_endpoints[i]}}" src="{{url_for('static', filename='img/unset-hex.png')}}" tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="Endpoint Status" data-content="The client endpoint is either unset or invalid!" data-placement="left"/>
              {% else %}
                <img id="info_status_{{client_names[i]}}_{{client_endpoints[i]}}" src="{{url_for('static', filename='img/loading.gif')}}" tabindex="0" role="button" data-toggle="popover" data-trigger="focus" title="Endpoint Status" data-content="Checking the status of the client endpoint......" data-placement="left"/>
              {% endif %}
            </div>
          {%endfor%}
        </div>
        <div class="task-info-container">
          <div class="task-info-item task-info-header">Experiment Name</div>
          <div class="task-info-item task-info-header">Experiment ID</div>
          <div class="task-info-item task-info-header">Status</div>
          <div class="task-info-item task-info-header">Config</div>
          <div class="task-info-item task-info-header">Log</div>
          <div class="task-info-item task-info-header">Report</div>
          <div class="task-info-item task-info-header">Tensorboard</div>
          {% for i in range(task_ids|length)%}
            <div class="task-info-item task-info-content">{{task_names[i]}}</div>
            <div class="task-info-item task-info-content">{{task_ids[i]}}</div>
            <div class="task-info-item task-info-content" id="task_{{task_ids[i]}}_status"></div>
            <div class="task-info-item task-info-content" id="task_{{task_ids[i]}}_configfile">
              <a href="{{url_for('download_file', file_type='configuration', group_id=server_group_id, task_id=task_ids[i])}}">
                <img src="{{url_for('static', filename='img/config.png')}}" style="width:25px; cursor:pointer;" id="???"/>
              </a>
            </div>
            <div class="task-info-item task-info-content" id="task_{{task_id}}_logfile">
              <a href="{{url_for('download_file', file_type='log', group_id=server_group_id, task_id=task_ids[i])}}">
                <img src="{{url_for('static', filename='img/log.png')}}" style="width:25px; cursor:pointer;" id="???"/>
              </a>
            </div>
            <div class="task-info-item task-info-content" id="task_{{task_id}}_reportfile">
              <a href="{{url_for('download_file', file_type='report', group_id=server_group_id, task_id=task_ids[i])}}">
                <img src="{{url_for('static', filename='img/report.png')}}" style="width:25px; cursor:pointer;" id="???"/>
              </a>
            </div>
            <div class="task-info-item task-info-content" id="task_{{task_id}}_tbfile">
              <a href="{{url_for('tensorboard_log_page', server_group_id=server_group_id, task_id=task_ids[i])}}">
                <img src="{{url_for('static', filename='img/tb.png')}}" style="width:25px; cursor:pointer;" id="???"/>
              </a>
            </div>
          {% endfor %}
        </div>
        <div class="form-group">
          <button class="btn btn-secondary" onclick="disableBackButton()" id="server-info-page-back-btn">Back</button>
        </div>
      </div>
    </div> #}

  </div> <!-- container -->

  <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h3 class="modal-title" id="deleteModalLabel">Delete Experiments</h3>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          You are going to delete the following experiments:
          <br>
          <div id="deleteItemList">
          </div>
          <br>
          To Confirm the deletion, print enter <em>delete</em> in the text input field.
          <input type="text" id="deleteConfirmForm" class="form-control" placeholder="delete" required="required" tabindex="1">
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" id="deleteConfirmBtn" data-dismiss="modal" disabled onclick="handleTaskDeletion()">Delete</button>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Script for updating selected tasks
    var selectedItems     = []
    var selectedTaskNames = []
    var group_id = "{{ server_group_id }}";

    $('input[name="item_checkbox"]').on('change', function() {
      // Update the selected item information
      if ($(this).is(':checked')) {
        selectedItems.push($(this).val());
        selectedTaskNames.push($(this)[0].getAttribute('task-name'));
      } else {
        selectedItems.splice(selectedItems.indexOf($(this).val()), 1);
        selectedTaskNames.splice(selectedTaskNames.indexOf($(this)[0].getAttribute('task-name')), 1);
      }
      
      // Change the status of the action buttons according to the number of selected items
      if (selectedItems.length == 0) {
        document.getElementById("experiment-delete").disabled = true;
        document.getElementById("experiment-compare").disabled = true;
      }
      else if (selectedItems.length == 1) {
        document.getElementById("experiment-delete").disabled = false;
        document.getElementById("experiment-compare").disabled = true;
      }
      else {
        document.getElementById("experiment-delete").disabled = false;
        document.getElementById("experiment-compare").disabled = false;
      }
    });

    // Compare the selected experiments
    function clickCompare() {
      // Convert task_ids array to a string with comma-separated ids
      var task_ids_string = selectedItems.join(',');

      // Generate URL
      var url = '/download/comp_report/' + group_id + '?task_ids=' + task_ids_string;

      var newWindow = window.open(url);
    }

    // Display the selected tasks in a modal for user confirmation
    function clickDelete() {
      var listHtml = "";
      for (var i = 0; i < selectedTaskNames.length; i++) {
        listHtml += `<li>${selectedTaskNames[i]}</li>`;
      }
      document.getElementById("deleteItemList").innerHTML = listHtml;
      document.getElementById("deleteConfirmForm").value = "";
      document.getElementById("deleteConfirmBtn").disabled = true;
    }

    // Change the status of the display button
    $('#deleteConfirmForm').on('input', function() {
      if ($(this).val() == 'delete') {
        document.getElementById("deleteConfirmBtn").disabled = false;
      }
      else {
        document.getElementById("deleteConfirmBtn").disabled = true;
      }
    });

    // Handle the deletion of tasks
    function handleTaskDeletion() {
      // Check again: the user has confirmed the deletion & at least one selected task
      var confirmInfo = document.getElementById("deleteConfirmForm").value;
      if (confirmInfo != 'delete' || selectedItems.length == 0) {
        console.log("Invalid Delete!")
        return;
      }
      console.log("Valid Delete!")
      $.ajax({
        url: '/handle-task-delete',
        method: 'GET',
        data: {},
        success: function(resp){
          console.log('DELETED')
        }
      })
      // TODO: Write the backend for this using ajax
    }

    // Disable the back button after clicking it
    function disableBackButton() {
      document.getElementById('server-info-page-back-btn').disabled = true;
      window.location.href='{{ url_for( 'dashboard') }}';
    }

    // Check the endpoint status
    $(document).ready(function() {
      $(function () {
        $('[data-toggle="popover"]').popover()
      })
      {# Obtain task infomation #}

      var task_arns = {{task_arns|safe}}
      var sent_arns = {};
      for (var i = 0; i < task_arns.length; i++) {
        sent_arns[i] = task_arns[i];
      }
      $.ajax({
        url: '/task-status',
        method: 'GET',
        data: {task_arns: sent_arns},
        success: function(resp){
          var task_ids = Object.keys(resp);
          for (var i = 0; i < task_ids.length; i++) {
            document.getElementById(`task_${task_ids[i]}_status`).innerHTML = resp[task_ids[i]]['status'];
          }
        }
      })
      
      {# Endpoint Health Status Check #}
      // Obtain the given endpoints to send, and generate an endpoint-name dictionary
      var client_endpoints = {{client_endpoints|safe}};
      var client_names = {{client_names|safe}}
      var sent_data= {};
      var endpoint_name_dict = {}
      for (var i = 0; i < client_endpoints.length; i++){
        if (client_endpoints[i] != '0') {
          sent_data[i] = client_endpoints[i];
          endpoint_name_dict[client_endpoints[i]] = client_names[i];
        }
      }
      {# console.log(endpoint_name_dict)
      console.log(sent_data); #}
      // Send the endpoints for status checking
      $.ajax({
        url: '/status-check',
        method: 'GET',
        data: {endpoints: sent_data},
        contentType: 'multipart/form-data',
        success: function(resp){
          var endpoints = Object.keys(resp);
          for (var i = 0; i < endpoints.length; i++) {
            if (resp[endpoints[i]] == '0') {
              document.getElementById(`info_status_${endpoint_name_dict[endpoints[i]]}_${endpoints[i]}`).src = '{{url_for('static', filename='img/inactive-hex.png')}}';
              document.getElementById(`info_status_${endpoint_name_dict[endpoints[i]]}_${endpoints[i]}`).setAttribute('data-content', 'The client endpoint is inactive or stopped!');
            }
            else if (resp[endpoints[i]] == '1') {
              document.getElementById(`info_status_${endpoint_name_dict[endpoints[i]]}_${endpoints[i]}`).src = '{{url_for('static', filename='img/set-hex.png')}}';
              document.getElementById(`info_status_${endpoint_name_dict[endpoints[i]]}_${endpoints[i]}`).setAttribute('data-content', 'The client endpoint is active with CPU available!'); 
            }
            else if (resp[endpoints[i]] == '2') {
              document.getElementById(`info_status_${endpoint_name_dict[endpoints[i]]}_${endpoints[i]}`).src = '{{url_for('static', filename='img/set-hex.png')}}';
              document.getElementById(`info_status_${endpoint_name_dict[endpoints[i]]}_${endpoints[i]}`).setAttribute('data-content', 'The client endpoint is active with GPU available!');
            }
            else {
              document.getElementById(`info_status_${endpoint_name_dict[endpoints[i]]}_${endpoints[i]}`).src = '{{url_for('static', filename='img/unset-hex.png')}}';
              document.getElementById(`info_status_${endpoint_name_dict[endpoints[i]]}_${endpoints[i]}`).setAttribute('data-content', 'The client endpoint is either unset or invalid!');
            }
          }
        }
      });  
    });
  </script>
{%endblock%}

