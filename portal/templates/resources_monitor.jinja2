<!DOCTYPE html>
<html>
<head>
  <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  <style>
    .row {
      display: flex;
      flex-direction: row;
      justify-content: space-around;
      margin-bottom: 20px;
    }
    .chart {
      width: 30%;
      height: 400px;
    }
  </style>
</head>
<body>
  <div id="endpoint-monitor">
    <h1>Endpoint Monitor</h1>
  </div>

  <script>
    var client_endpoints = {{ client_endpoints|tojson|safe }};
    var client_names = {{ client_names|tojson|safe }};

    var endpointData = {};

    function updateCharts() {
        // loop through each endpoint
        Object.keys(endpointData).forEach(function(endpoint) {
            // get the data for this endpoint
            var endpointDataArray = endpointData[endpoint];
            var cpuData = {
                x: endpointDataArray.map(d => d.timestamp),
                y: endpointDataArray.map(d => d.data["CPU utilization"]),
                mode: 'lines',
                name: 'CPU Utilization'
            };
            var gpuData = {
                x: endpointDataArray.map(d => d.timestamp),
                y: endpointDataArray.map(d => d.data["GPU utilization"]),
                mode: 'lines',
                name: 'GPU Utilization'
            };
            var memoryData = {
                x: endpointDataArray.map(d => d.timestamp),
                y: endpointDataArray.map(d => d.data["Memory utilization"]),
                mode: 'lines',
                name: 'Memory Utilization'
            };
            var networkData = {
                x: endpointDataArray.map(d => d.timestamp),
                y: endpointDataArray.map(d => d.data["Bytes Sent"]),
                mode: 'lines',
                name: 'Network Sent'
            };
            var networkReceivedData = {
                x: endpointDataArray.map(d => d.timestamp),
                y: endpointDataArray.map(d => d.data["Bytes Received"]),
                mode: 'lines',
                name: 'Network Received'
            };

            // update the corresponding plots with the new data
            Plotly.update('cpu-' + endpoint, cpuData);
            Plotly.update('gpu-' + endpoint, gpuData);
            Plotly.update('mem-' + endpoint, memoryData);
            Plotly.update('network-' + endpoint, networkData);
            Plotly.update('network-' + endpoint, networkReceivedData);
        });
    }

    $(document).ready(function(){
        function updateData() {
            $.getJSON('/resources_monitor_data', 
              { client_endpoints: JSON.stringify(client_endpoints) }, 
                function(data) {
                    console.log(data)
                    for (var endpoint in data) {
                        if (!endpointData.hasOwnProperty(endpoint)) {
                            // Initialize the data array for this endpoint if it's new
                            endpointData[endpoint] = [];
                        }

                        // Add the new datapoint
                        endpointData[endpoint].push({
                            timestamp: new Date(),
                            data: data[endpoint]
                        });

                        // Remove old datapoints if there are more than 100
                        if (endpointData[endpoint].length > 100) {
                            endpointData[endpoint].shift();
                        }
                    }

                    // Update the page with the new data here, for example:
                    updateCharts();
              }
            ); 
        }

        // Update the data every 5 seconds
        setInterval(updateData, 10000);
    });
    </script>

</body</html>
