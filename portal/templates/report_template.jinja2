<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="generator" content="quarto-1.2.313">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes">
    <link rel="stylesheet" type="text/css" href="{{url_for('static', filename='css/report.css')}}">
    <title>{{tab_title}}</title>
  </head>

  <body>
    <div id="quarto-content" class="page-columns page-rows-contents page-layout-article">
      
      <!-- TODO: Add the sidebar after the design -->

      <main class="content" id="quarto-document-content">

        <header id="title-block-header" class="quarto-title-block default">
          <div class="quarto-title">
            <h1 style="border-bottom: 1px solid #eee;">{{report_title}}</h1>
          </div>
          <button onclick="window.print();" class="print-hide">Print as PDF</button>
          <div class="quarto-title-meta">
            <table>
              <thead>
                <tr>
                  <th class="blank level0"> </th>
                  <th class="col_heading level0 col0"></th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <th class="row_heading level0 row0">Group Name: &nbsp;&nbsp;</th>
                  <td class="data row0 col0">{{hp_data.group_name}}</td>
                </tr>
                <tr>
                  <th class="row_heading level0 row1">Experiment Name: &nbsp;&nbsp;</th>
                  <td class="data row1 col0">{{hp_data.exp_name}}</td>
                </tr>
              </tbody>
            </table>
          </div>
        </header>

        {# Section 1: Training Hyperparameters #}
        {%if hp_data%}
        <section id="federated-learning-hyperparameters" class="level2">
          <h2 class="anchored" data-anchor-id="hyperparameters">Training Hyperparameters</h2>
          <section id="hyperparameters" class="level4">
            <div class="cell" data-execution_count="30">
              <div class="cell-output cell-output-display" data-execution_count="825">
                <div class="container first-container col-sm-12 pull-left">
                  <table class="dataframe table table-sm table-striped">
                    <thead>
                      <tr>
                        <th></th>
                        <th>hyperparameter</th>
                        <th>explanation</th>
                        <th>value</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr class="sub-container">
                        <td></td>
                        <td>Federation Algorithm</td>
                        <td>Server algorithm for the federated learning</td>
                        <td>{{hp_data.fed_alg}}</td>
                      </tr>
                      <tr class="sub-container">
                        <td></td>
                        <td>Global training epochs</td>
                        <td>Number of global training epochs for the federation server</td>
                        <td>{{hp_data.server_epoch}}</td>
                      </tr>
                      <tr class="sub-container">
                        <td></td>
                        <td>Local training epochs</td>
                        <td>Number of local training epochs for each federation site/endpoint</td>
                        <td>{{hp_data.client_epoch}}</td>
                      </tr>
                      <tr class="sub-container">
                        <td></td>
                        <td>Privacy budget</td>
                        <td>Privacy budget used for privacy preserving</td>
                        <td>{{hp_data.privacy_budget}}</td>
                      </tr>
                      <tr class="sub-container">
                        <td></td>
                        <td>Clip value</td>
                        <td>Clip value for privacy preserving (TBF)</td>
                        <td>{{hp_data.clip_value}}</td>
                      </tr>
                      <tr class="sub-container">
                        <td></td>
                        <td>Clip norm</td>
                        <td>Clip norm for privacy preserving (TBF)</td>
                        <td>{{hp_data.clip_norm}}</td>
                      </tr>
                      {%if hp_data.model_type%}
                      <tr class="sub-container">
                        <td><span class="exploder" style="cursor: pointer; color: #6C757D">▶ &nbsp;</td>
                        <td>Model type</td>
                        <td>Type of trained model</td>
                        <td>{{hp_data.model_type}}</td>
                      </tr>
                      <tr class="explode hide print-expand">
                        <td colspan="4" style="display: none;">
                          <table class="table table-striped">
                            <thead>
                              <tr>
                                <th>model parameter</th>
                                <th>value</th>
                              </tr>
                            </thead>
                            <tbody>
                              {% for param, val in hp_data.model_params.items()%}
                              <tr>
                                <td>{{param}}</td>
                                <td>{{val}}</td>
                              </tr>
                              {% endfor %}
                            </tbody>
                          </table>
                          </td>
                        </tr>
                      {%endif%}
                      {%if hp_data.server_lr%}
                      <tr class="sub-container">
                        <td></td>
                        <td>Server learning rate</td>
                        <td>Learning rate of the federation server</td>
                        <td>{{hp_data.server_lr}}</td>
                      </tr>
                      {%endif%}
                      {%if hp_data.server_mom%}
                      <tr class="sub-container">
                        <td></td>
                        <td>Server momentum</td>
                        <td>Momentum of the federation server</td>
                        <td>{{hp_data.server_mom}}</td>
                      </tr>
                      {%endif%}
                      {%if hp_data.server_adapt%}
                      <tr class="sub-container">
                        <td></td>
                        <td>Server adapt parameter</td>
                        <td>Adaptive parameter of the federation server</td>
                        <td>{{hp_data.server_adapt}}</td>
                      </tr>
                      {%endif%}
                      {%if hp_data.server_var_mom%}
                      <tr class="sub-container">
                        <td></td>
                        <td>Server var momentem</td>
                        <td>Var momentum of the federation server</td>
                        <td>{{hp_data.server_var_mom}}</td>
                      </tr>
                      {%endif%}
                      <tr class="sub-container">
                        <td></td>
                        <td>Optimizer</td>
                        <td>
                          <a href="https://pytorch.org/docs/stable/generated/torch.optim.SGD.html" style="color: #085497;">SGD: Stochastic Gradient Descent</a> &nbsp;
                          <a href="https://pytorch.org/docs/stable/generated/torch.optim.Adam.html#torch.optim.Adam" style="color: #085497;">Adam: Adaptive moment estimation</a>
                        </td>
                        <td>{{hp_data.optimizer}}</td>
                      </tr>
                      <tr class="sub-container">
                        <td></td>
                        <td>Learning rate</td>
                        <td>Client learning rate</td>
                        <td>{{hp_data.lr}}</td>
                      </tr>
                      <tr class="sub-container">
                        <td></td>
                        <td>Learning rate decay</td>
                        <td>Client learning rate decay</td>
                        <td>{{hp_data.lr_decay}}</td>
                      </tr>
                      <tr class="sub-container">
                        <td></td>
                        <td>Client weights</td>
                        <td>How to assign weights for different clients in client model aggregation</td>
                        <td>{{hp_data.client_weights}}</td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </section>
        </section>
        {%endif%}

        {# Section 2: Client Validation Results #}
        {%if client_validation%}
        <section id="federated-learning-site-validation" class="level2">
          <h2 class="anchored" data-anchor-id="site-validation">Sites Validation</h2>
          <span class="info-exploder" style="cursor: pointer; color:#6C757D;">▶ &nbsp;Click here to expand explanations:</span>
          <div style="display: none;" class="hide">
            <p style="margin: 0.5% 0;">This section has detailed site validation metrics for the federated learning.</p>
            <ul style="list-style: disc;">
              <li><b>endpoint</b>–Name of the endpoint doing the training</li>
              <li><b>step</b>–Index of the global training step (starting from 0).</li>
              <li><b>loss</b>–Local validation loss for the certain endpoint.</li>
              <li><b>accuracy</b>–Local validation accuracy for the certain endpoint.</li>
            </ul>
          </div>
          <br><br>
          <section id="site-validation" class="level4">
            <div class="cell" data-execution_count="30">
              <div class="cell-output cell-output-display" data-execution_count="825">
                <div class="container first-container col-sm-12">
                  <table class="dataframe table table-sm table-striped">
                    <thead>
                      <tr>
                        <th>endpoint</th>
                        <th>step</th>
                        <th>loss</th>
                        <th>accuracy</th>
                      </tr>
                    </thead>
                    <tbody>
                      {% for val_res in client_validation%}
                        <tr class="sub-container">
                          <td>{{val_res.endpoint}}</td>
                          <td>{{val_res.step}}</td>
                          <td>{{val_res.loss}}</td>
                          <td>{{val_res.accuracy}}</td>
                        </tr>
                      {% endfor %}
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </section>
        </section>
        {%endif%}

        {# Section 3: Server Validation #}
        {%if server_validation%}
        <section id="federated-learning-server-validation" class="level2">
          <h2 class="anchored" data-anchor-id="server-validation">Server Validation</h2>
          <span class="info-exploder" style="cursor: pointer; color:#6C757D;">▶ &nbsp;Click here to expand explanations:</span>
          <div style="display: none;" class="hide print-expand">
            <p style="margin: 0.5% 0;">This section has detailed server validation metrics for the federated learning.</p>
            <ul style="list-style: disc;">
              <li><b>step</b>–Index of the global training step (starting from 1).</li>
              <li><b>loss</b>–Local validation loss for the server.</li>
              <li><b>accuracy</b>–Local validation accuracy for the server.</li>
            </ul>
          </div>
          <br><br>
          <section id="server-validation" class="level4">
            <div class="cell" data-execution_count="30">
              <div class="cell-output cell-output-display" data-execution_count="825">
                <div class="container first-container col-sm-12 pull-left">
                  <table class="dataframe table table-sm table-striped">
                    <thead>
                      <tr>
                        <th>step</th>
                        <th>loss</th>
                        <th>accuracy</th>
                      </tr>
                    </thead>
                    <tbody>
                      {% for val_res in server_validation%}
                        <tr class="sub-container">
                          <td>{{val_res.step}}</td>
                          <td>{{val_res.loss}}</td>
                          <td>{{val_res.accuracy}}</td>
                        </tr>
                      {% endfor %}
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </section>
        </section>
        {%endif%}

        {# Section 4: Training #}
        {%if training_data%}
        <section id="federated-learning-metrics" class="level2">
          <h2 class="anchored" data-anchor-id="training">Training</h2>
          <span class="info-exploder" style="cursor: pointer; color:#6C757D;">▶ &nbsp;Click here to expand explanations:</span>
          <div style="display: none;" class="hide print-expand">
            <p style="margin: 0.5% 0;">
            This section has detailed runtime metrics for the federation.
            </p>
            <ul style="list-style: disc;">
              <li><b>task name</b>–Name of function or method being executed.</li>
              <li><b>endpoint</b>–Name of the endpoint executing the task.</li>
              <li><b>start time</b>–Start time of the certain task.</li>
              <li><b>end time</b>–End time of the certain task.</li>
              <li><b>duration</b>–How long did the task take in seconds.</li>
              <li><b>max_mem</b>–Total memory used by the system.</li>
              <li><b>max_cpu</b>–CPU usage percentage.</li>
            </ul>
          </div>
          <br><br>
          <section id="train" class="level4">
            <div class="cell" data-execution_count="30">
              <div class="cell-output cell-output-display" data-execution_count="825">
                <div class="container first-container col-sm-12 pull-left">
                  <table class="dataframe table table-sm">
                    <thead>
                      <tr>
                        <th></th>
                        <th>task name</th>
                        <th>endpoint</th>
                        <th>start time</th>
                        <th>end time</th>
                        <th>duration</th>
                        <th>max mem</th>
                        <th>max cpu</th>
                      </tr>
                    </thead>
                    <tbody>
                      {% for task in training_data%}
                        <tr class="sub-container">
                          <td><span class="exploder" style="cursor: pointer; color: #6C757D">▶ &nbsp;</td>
                          <td>{{task.task_name}}</td>
                          <td>{{task.endpoint}}</td>
                          <td>{{task.start_at}}</td>
                          <td>{{task.end_at}}</td>
                          <td>{{task.duration}} sec</td>
                          <td>-</td>
                          <td>-</td>
                        </tr>
                        <tr class="explode hide print-expand">
                          <td colspan="8" style="display: none;">
                            <table class="table table-striped">
                              <thead>
                                <tr>
                                  <th>events</th>
                                  <th>time</th>
                                </tr>
                              </thead>
                              <tbody>
                                {% for event, time in task.timing.items()%}
                                <tr>
                                  <td>{{event}}</td>
                                  <td>{{time}} sec</td>
                                </tr>
                                {% endfor %}
                              </tbody>
                            </table>
                          </td>
                        </tr>
                      {% endfor %}
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </section>
        </section>
        {%endif%}

        {# Section 5: Client Test: TODO #}

        {# Section 6: Server Test: TODO #}

      </main>

      <script>
      $(".exploder").click(function(){
        $(this).closest("tr").next("tr").toggleClass("hide");
        
        if($(this).closest("tr").next("tr").hasClass("hide")){
          $(this)[0].innerHTML = "▶ &nbsp;";
          $(this).closest("tr").next("tr").children("td").slideUp();
        }
        else{
          $(this)[0].innerHTML = "▼ &nbsp;";
          $(this).closest("tr").next("tr").children("td").slideDown(350);
        }
      });

      $(".info-exploder").click(function(){
        $(this).next("div").toggleClass("hide");
        if ($(this).next("div").hasClass("hide")) {
          $(this)[0].innerHTML = "▶ &nbsp;Click here to expand explanations:";
          $(this).next("div").slideUp();
        }
        else{
          $(this)[0].innerHTML = "▼ &nbsp;Click here to expand explanations:";
          $(this).next("div").slideDown();
        }
      })

      function beforePrint() {
        // Get all elements with class 'exploder'
        var exploders = document.getElementsByClassName('exploder');

        // Loop through each element in the list
        for (var i = 0; i < exploders.length; i++) {
          // Get the current element in the loop
          var currentExploder = exploders[i];

          // Check if the closest 'tr' element's next sibling has class 'hide'
          if ($(currentExploder).closest("tr").next("tr").hasClass("hide")) {
            // Unhide the exploder
            $(currentExploder).closest("tr").next("tr").toggleClass("hide");
            // Update the HTML of the current element
            currentExploder.innerHTML = "▼ &nbsp;";
            // Slide down the children of the next 'td' element
            $(currentExploder).closest("tr").next("tr").children("td").slideDown(350);
          }
        }

        // Get all elements with class 'info-exploder'
        var infoExploders = document.getElementsByClassName('info-exploder');

        // Loop through each element in the list
        for (var i = 0; i < infoExploders.length; i++) {
          // Get the current element in the loop
          var currentInfoExploder = infoExploders[i];

          // Check if the closest 'tr' element's next sibling has class 'hide'
          if ($(currentInfoExploder).next("div").hasClass("hide")) {
            // Unhide the exploder
            $(currentInfoExploder).next("div").toggleClass("hide");
            // Update the HTML of the current element
            currentInfoExploder.innerHTML = "▼ &nbsp;Click here to expand explanations:";
            // Slide down the children of the next 'td' element
            $(currentInfoExploder).next("div").slideDown();
          }
        }
      }
      window.onbeforeprint = beforePrint;
      </script>
    </div>
  </body>
</html>